In [15]:




# Tryand catch block
​
try: 
         val = int(input("Input a number"))
         for i in range(val):
            if(i%2 == 0):
                print(i)
​
except ValueError:
          print("Please provide a valid numer")



Input a number10
0
2
4
6
8
In [16]:


#lambda function -- anonymous or unbound function
sum = lambda num1,num2: num1+num2
print("Total",sum(10,20))



Total 30
In [28]:


#oops
#class
class Person:
    print("test")
    
p1=Person()
p1.name="abc"
print(p1.name) #instance(object leble)variable
p2=Person()
#print(p2.name)
p2



test
abc
Out[28]:
<__main__.Person at 0x248f4dad908>
In [53]:


#self method
class Rectange:
   def __init__(self, length, breadth, unit_cost=0):
       self.length = length
       self.breadth = breadth
       self.unit_cost = unit_cost
   
   def get_perimeter(self):
       return 2 * (self.length + self.breadth)
   
   def get_area(self):
       return self.length * self.breadth
   
   def calculate_cost(self):
       area = self.get_area()
       return area * self.cost
r = Rectange(160, 120, 2000)
print(r.get_area())
​



19200
In [56]:


#file
file = open("fun.txt", "w")
#file.write("Hello I am Fine \n This is my New File")
​
file=open("fun.txt","r")
print(file.read())
​




In [62]:


#word count
from collections import Counter
file=open("fun.txt","r")
#print(file.read())
# Declare an empty list named "lines"
words = []
for lines in file:  # For each line of text in in_file, where the data is named "lines",
    words.extend(lines.split())
print(Counter(words), '\t')
​



Counter() 	
In [63]:


#numpy -- lenier algebra
import numpy as np
arr = np.arange(0,10)
​



In [65]:


arr


Out[65]:
array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
In [66]:


arr+arr


Out[66]:
array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])
In [67]:


arr/arr



C:\ProgramData\Anaconda3\lib\site-packages\ipykernel_launcher.py:1: RuntimeWarning: invalid value encountered in true_divide
  """Entry point for launching an IPython kernel.
Out[67]:
array([nan,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.])
In [68]:


1/arr



C:\ProgramData\Anaconda3\lib\site-packages\ipykernel_launcher.py:1: RuntimeWarning: divide by zero encountered in true_divide
  """Entry point for launching an IPython kernel.
Out[68]:
array([       inf, 1.        , 0.5       , 0.33333333, 0.25      ,
       0.2       , 0.16666667, 0.14285714, 0.125     , 0.11111111])
In [69]:


arr*3 #vector multiplication


Out[69]:
array([ 0,  3,  6,  9, 12, 15, 18, 21, 24, 27])
In [70]:


np.exp(arr)#calculate exponential


Out[70]:
array([1.00000000e+00, 2.71828183e+00, 7.38905610e+00, 2.00855369e+01,
       5.45981500e+01, 1.48413159e+02, 4.03428793e+02, 1.09663316e+03,
       2.98095799e+03, 8.10308393e+03])
In [71]:


np.sin(arr)


Out[71]:
array([ 0.        ,  0.84147098,  0.90929743,  0.14112001, -0.7568025 ,
       -0.95892427, -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849])
In [72]:


np.log(arr)



C:\ProgramData\Anaconda3\lib\site-packages\ipykernel_launcher.py:1: RuntimeWarning: divide by zero encountered in log
  """Entry point for launching an IPython kernel.
Out[72]:
array([      -inf, 0.        , 0.69314718, 1.09861229, 1.38629436,
       1.60943791, 1.79175947, 1.94591015, 2.07944154, 2.19722458])
In [74]:


my_matrix = [[1,2,3],[4,5,6],[7,8,9]]
np.array(my_matrix)


Out[74]:
array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]])
In [76]:


np.zeros((5,5))


Out[76]:
array([[0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])
In [78]:


np.ones((5,5))


Out[78]:
array([[1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.]])
In [80]:


#linespace -- trapijudial rule
np.linspace(0,10,50)
​


Out[80]:
array([ 0.        ,  0.20408163,  0.40816327,  0.6122449 ,  0.81632653,
        1.02040816,  1.2244898 ,  1.42857143,  1.63265306,  1.83673469,
        2.04081633,  2.24489796,  2.44897959,  2.65306122,  2.85714286,
        3.06122449,  3.26530612,  3.46938776,  3.67346939,  3.87755102,
        4.08163265,  4.28571429,  4.48979592,  4.69387755,  4.89795918,
        5.10204082,  5.30612245,  5.51020408,  5.71428571,  5.91836735,
        6.12244898,  6.32653061,  6.53061224,  6.73469388,  6.93877551,
        7.14285714,  7.34693878,  7.55102041,  7.75510204,  7.95918367,
        8.16326531,  8.36734694,  8.57142857,  8.7755102 ,  8.97959184,
        9.18367347,  9.3877551 ,  9.59183673,  9.79591837, 10.        ])
In [81]:


#eye -- identity matrix
np.eye(4)


Out[81]:
array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])
In [83]:


np.random.rand(2)


Out[83]:
array([0.47377878, 0.67903875])
In [84]:


np.random.randn(2)


Out[84]:
array([0.19022789, 0.63989644])
In [86]:


np.random.randint(2,100)


Out[86]:
88
In [4]:


arr.shape(10)#Vector



---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-4-a86aaa302d65> in <module>()
----> 1 arr.shape(10)#Vector

NameError: name 'arr' is not defined

In [ ]:


word = "abc"
print("HI")
count =1 
for i in word:
    print(i)
    
    alphabate = input("Guess the first alphabate")
    if(i == alphabate):
        print ("Test")
        
   



In [ ]:


​
​



In [ ]:


​



